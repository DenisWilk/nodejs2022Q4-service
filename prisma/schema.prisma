datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  login     String   @unique
  password  String
  version   Int      @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id         String    @id @default(uuid())
  name       String
  grammy     Boolean   @default(false)
  album      Album[]
  track      Track[]
  favorite   Favorite? @relation(fields: [favoriteId], references: [id], onDelete: SetNull)
  favoriteId String?
}

model Album {
  id         String    @id @default(uuid())
  name       String
  year       Int
  artist     Artist?   @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId   String?
  track      Track[]
  favorite   Favorite? @relation(fields: [favoriteId], references: [id], onDelete: SetNull)
  favoriteId String?
}

model Track {
  id         String    @id @default(uuid())
  name       String
  duration   Int
  artist     Artist?   @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId   String?
  album      Album?    @relation(fields: [albumId], references: [id], onDelete: SetNull)
  albumId    String?
  favorite   Favorite? @relation(fields: [favoriteId], references: [id], onDelete: SetNull)
  favoriteId String?
}

model Favorite {
  id      String   @id @default(uuid())
  artists Artist[]
  albums  Album[]
  tracks  Track[]
}
